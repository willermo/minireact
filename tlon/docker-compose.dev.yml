name: tlon-dev
services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: dev
    restart: unless-stopped
    command: sh -c "/app/scripts/check-permissions.sh && /app/scripts/ensure-certificates.sh && npm run migrate:latest && npm run dev"
    env_file:
      - backend/.env
      - backend/.env.development
    environment:
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./backend:/app
      - ./backend/node_modules:/app/node_modules
      - ./backend/data:/app/data
      - ./backend/certs:/app/certs
    networks:
      - app-network

    healthcheck:
      test: ["CMD", "curl", "-kf", "https://localhost:3000/api/health"]
      interval: 120s
      timeout: 5s
      retries: 5
      start_period: 30s
      start_interval: 5s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: dev
    #   args:
    #     USER_ID: "${UID:-1000}"
    #     GROUP_ID: "${GID:-1000}"
    # user: "${UID:-1000}:${GID:-1000}"
    restart: unless-stopped
    entrypoint: ["/app/docker-entrypoint.sh"]
    command: sh -c "/app/scripts/check-permissions.sh && /app/scripts/ensure-certificates.sh && npm run dev"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
      - ./frontend/certs:/app/certs
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - frontend/.env
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-kf", "https://localhost:5173/"]
      interval: 120s
      timeout: 5s
      retries: 5
      start_period: 30s
      start_interval: 5s
    ports:
      - "5173:5173"

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "4433:443"
    networks:
      - app-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:443"]
      interval: 120s
      timeout: 5s
      retries: 5
      start_period: 30s
      start_interval: 5s

networks:
  app-network:
    driver: bridge
